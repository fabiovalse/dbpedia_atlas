// Generated by CoffeeScript 1.4.0
(function() {

  map.preprocess = function(data) {
    var features, geometries, _merge;
    features = topojson.feature(data, data.objects.leaf_regions).features;
    geometries = data.objects.leaf_regions.geometries;
    /* parse paths into arrays, and extract the class of each leaf region
    */

    features.forEach(function(f) {
      f.properties.path = JSON.parse(f.properties.path);
      return f.properties["class"] = f.properties.path[f.properties.path.length - 1];
    });
    /* presimplify the topology (compute the effective area (z) of each point)
    */

    topojson.presimplify(data);
    /* store all leaf_regions into the ontology tree
    */

    features.forEach(function(f) {
      return ontology.get_node_from_class(f.properties["class"]).leaf_region = f;
    });
    /* compute merged regions from leaf regions
    */

    _merge = function(n, depth) {
      n.merged_region = topojson.merge(data, geometries.filter(function(g) {
        return g.properties.path.length > depth && g.properties.path[depth] === n.name;
      }));
      if (n.children != null) {
        return n.children.forEach(function(c) {
          return _merge(c, depth + 1);
        });
      }
    };
    return _merge(ontology.tree, 0);
  };

}).call(this);
