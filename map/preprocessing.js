// Generated by CoffeeScript 1.4.0
(function() {

  map.preprocess = function(data) {
    var features, geometries;
    features = topojson.feature(data, data.objects.leaf_regions).features;
    geometries = data.objects.leaf_regions.geometries;
    /* parse paths into arrays, and extract the class of each leaf region
    */

    features.forEach(function(f) {
      f.properties.path = JSON.parse(f.properties.path);
      return f.properties["class"] = f.properties.path[f.properties.path.length - 1];
    });
    /* presimplify the topology (compute the effective area (z) of each point)
    */

    topojson.presimplify(data);
    /* store all leaf_regions into the ontology tree
    */

    features.forEach(function(f) {
      return ontology.get_node_from_class(f.properties["class"]).leaf_region = f;
    });
    /* compute level one regions by merging leaf regions together
    */

    return ontology.tree.children.forEach(function(child) {
      return child.merged_region = topojson.merge(data, geometries.filter(function(g) {
        return g.properties.path.length > 1 && g.properties.path[1] === child.name;
      }));
    });
  };

}).call(this);
